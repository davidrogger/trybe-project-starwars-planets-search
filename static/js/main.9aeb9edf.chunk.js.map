{"version":3,"sources":["styles/FilterPainel.module.css","styles/Table.module.css","styles/Header.module.css","testData.js","components/Header.js","context/StarwarsProvider.js","components/FilterByName.js","components/NumericFilterCard.js","components/AppliedFilter.js","components/FilterButton.js","helpers/setState.js","components/InputSelect.js","components/InputSelectColumn.js","components/InputSelectComparison.js","components/InputValueFilter.js","components/FilterColumnInputs.js","components/FilterByNumericValues.js","components/InputSelectOrder.js","components/InputRadioOrder.js","components/OrderButton.js","components/FilterOrder.js","components/RemoveFilterBtn.js","components/AdvancedFilters.js","components/FilterPainel.js","components/TableBody.js","components/TableHeader.js","services/starwarsAPI.js","helpers/alphabeticNameOrder.js","helpers/formatColumnsName.js","components/Table.js","App.js","index.js"],"names":["module","exports","count","next","previous","results","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","films","created","edited","url","Header","className","styles","header__container","header__title","Context","createContext","Provider","initialOptions","initialNumericValue","column","comparison","value","initialOrderValue","sort","StarwarsProvider","children","useState","data","setData","filterByName","setFilterByName","filterByNumericValue","setFilterByNumericValue","filterNumeric","setFilterNumeric","filterNumericResult","setFilterNumericResult","filterResult","setFilterResult","filterOptions","setFilterOptions","options","setOptions","filterOrder","setFilterOrder","contextValue","columnTitles","setColumnTitles","FilterByName","useContext","useEffect","filterDisable","length","applyFilter","filter","toLowerCase","includes","painel__head","type","data-testid","input__filter","placeholder","onChange","target","NumericFilterCard","id","filter__applied","onClick","removeId","newFilter","indexId","findIndex","removeItem","splice","removeFilter","AppliedFilters","applied_filters_container","map","key","FilterButton","newNumericFilter","Math","random","toString","slice","prevState","disabled","setState","callback","InputSelect","testeId","option","InputSelectColumn","selectedOption","alreadyFiltered","removeOptions","every","filtered","OPTIONS","InputSelectComparison","InputValueFilter","FilterColumnInputs","numericValues__input","FilterByNumericValues","forEach","item","dataNumber","Number","valueNumber","comparisonType","numericValues__container","InputSelectOrder","radiosOptions","InputRadioOrder","inputRadio__container","radio","htmlFor","checked","OrderButton","newOrderDisplay","columnA","columnB","numberA","numberB","sortOrder","FilterOrder","filterOrder__container","RemoveFilterBtn","removeBtn_container","AdvancedFilters","advancedFilters__container","AppliedFilter","FilterPainel","painel__container","TableBody","displayResult","rotation","orbital","surfaceWater","hyperlink_content","filmeList","film","index","movies","TableHeader","title","getStarWarsData","a","starWarsPlanets","alphabeticNameOrder","array","b","formatColumnsName","titles","toUpperCase","substring","capitalize","search","replace","replaceUnderscore","Table","getStarWarsAPI","orderingResults","tableColumnsName","Object","keys","namesFormatted","getStarwarsPlanets","search__container","table__container","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9aeb9edf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"painel__container\":\"FilterPainel_painel__container__2SXrs\",\"painel__head\":\"FilterPainel_painel__head__1Rrc7\",\"input__filter\":\"FilterPainel_input__filter__DE33V\",\"numericValues__container\":\"FilterPainel_numericValues__container__f3B9V\",\"filterOrder__container\":\"FilterPainel_filterOrder__container__NlcMO\",\"removeBtn_container\":\"FilterPainel_removeBtn_container__2mbKM\",\"numericValues__input\":\"FilterPainel_numericValues__input__Asp5g\",\"advancedFilters__container\":\"FilterPainel_advancedFilters__container__22QRk\",\"inputRadio__container\":\"FilterPainel_inputRadio__container__P9ztA\",\"filter__applied\":\"FilterPainel_filter__applied__3DwYp\",\"applied_filters_container\":\"FilterPainel_applied_filters_container__1CEWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search__container\":\"Table_search__container__2lRfC\",\"table__container\":\"Table_table__container__2ppfm\",\"hyperlink_content\":\"Table_hyperlink_content__qPRqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__container\":\"Header_header__container__F8prL\",\"header__title\":\"Header_header__title__-P60c\"};","const response = {\n  count: 60,\n  next: 'https://swapi-trybe.herokuapp.com/api/planets/?page=2',\n  previous: null,\n  results: [\n    {\n      name: 'Tatooine',\n      rotation_period: '23',\n      orbital_period: '304',\n      diameter: '10465',\n      climate: 'arid',\n      gravity: '1 standard',\n      terrain: 'desert',\n      surface_water: '1',\n      population: '200000',\n      residents: [\n        'https://swapi-trybe.herokuapp.com/api/people/1/',\n        'https://swapi-trybe.herokuapp.com/api/people/2/',\n        'https://swapi-trybe.herokuapp.com/api/people/4/',\n        'https://swapi-trybe.herokuapp.com/api/people/6/',\n        'https://swapi-trybe.herokuapp.com/api/people/7/',\n        'https://swapi-trybe.herokuapp.com/api/people/8/',\n        'https://swapi-trybe.herokuapp.com/api/people/9/',\n        'https://swapi-trybe.herokuapp.com/api/people/11/',\n        'https://swapi-trybe.herokuapp.com/api/people/43/',\n        'https://swapi-trybe.herokuapp.com/api/people/62/',\n      ],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/1/',\n        'https://swapi-trybe.herokuapp.com/api/films/3/',\n        'https://swapi-trybe.herokuapp.com/api/films/4/',\n        'https://swapi-trybe.herokuapp.com/api/films/5/',\n        'https://swapi-trybe.herokuapp.com/api/films/6/',\n      ],\n      created: '2014-12-09T13:50:49.641000Z',\n      edited: '2014-12-20T20:58:18.411000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/1/',\n    },\n    {\n      name: 'Alderaan',\n      rotation_period: '24',\n      orbital_period: '364',\n      diameter: '12500',\n      climate: 'temperate',\n      gravity: '1 standard',\n      terrain: 'grasslands, mountains',\n      surface_water: '40',\n      population: '2000000000',\n      residents: [\n        'https://swapi-trybe.herokuapp.com/api/people/5/',\n        'https://swapi-trybe.herokuapp.com/api/people/68/',\n        'https://swapi-trybe.herokuapp.com/api/people/81/',\n      ],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/1/',\n        'https://swapi-trybe.herokuapp.com/api/films/6/',\n      ],\n      created: '2014-12-10T11:35:48.479000Z',\n      edited: '2014-12-20T20:58:18.420000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/2/',\n    },\n    {\n      name: 'Yavin IV',\n      rotation_period: '24',\n      orbital_period: '4818',\n      diameter: '10200',\n      climate: 'temperate, tropical',\n      gravity: '1 standard',\n      terrain: 'jungle, rainforests',\n      surface_water: '8',\n      population: '1000',\n      residents: [],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/1/',\n      ],\n      created: '2014-12-10T11:37:19.144000Z',\n      edited: '2014-12-20T20:58:18.421000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/3/',\n    },\n    {\n      name: 'Hoth',\n      rotation_period: '23',\n      orbital_period: '549',\n      diameter: '7200',\n      climate: 'frozen',\n      gravity: '1.1 standard',\n      terrain: 'tundra, ice caves, mountain ranges',\n      surface_water: '100',\n      population: 'unknown',\n      residents: [],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/2/',\n      ],\n      created: '2014-12-10T11:39:13.934000Z',\n      edited: '2014-12-20T20:58:18.423000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/4/',\n    },\n    {\n      name: 'Dagobah',\n      rotation_period: '23',\n      orbital_period: '341',\n      diameter: '8900',\n      climate: 'murky',\n      gravity: 'N/A',\n      terrain: 'swamp, jungles',\n      surface_water: '8',\n      population: 'unknown',\n      residents: [],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/2/',\n        'https://swapi-trybe.herokuapp.com/api/films/3/',\n        'https://swapi-trybe.herokuapp.com/api/films/6/',\n      ],\n      created: '2014-12-10T11:42:22.590000Z',\n      edited: '2014-12-20T20:58:18.425000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/5/',\n    },\n    {\n      name: 'Bespin',\n      rotation_period: '12',\n      orbital_period: '5110',\n      diameter: '118000',\n      climate: 'temperate',\n      gravity: '1.5 (surface), 1 standard (Cloud City)',\n      terrain: 'gas giant',\n      surface_water: '0',\n      population: '6000000',\n      residents: [\n        'https://swapi-trybe.herokuapp.com/api/people/26/',\n      ],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/2/',\n      ],\n      created: '2014-12-10T11:43:55.240000Z',\n      edited: '2014-12-20T20:58:18.427000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/6/',\n    },\n    {\n      name: 'Endor',\n      rotation_period: '18',\n      orbital_period: '402',\n      diameter: '4900',\n      climate: 'temperate',\n      gravity: '0.85 standard',\n      terrain: 'forests, mountains, lakes',\n      surface_water: '8',\n      population: '30000000',\n      residents: [\n        'https://swapi-trybe.herokuapp.com/api/people/30/',\n      ],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/3/',\n      ],\n      created: '2014-12-10T11:50:29.349000Z',\n      edited: '2014-12-20T20:58:18.429000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/7/',\n    },\n    {\n      name: 'Naboo',\n      rotation_period: '26',\n      orbital_period: '312',\n      diameter: '12120',\n      climate: 'temperate',\n      gravity: '1 standard',\n      terrain: 'grassy hills, swamps, forests, mountains',\n      surface_water: '12',\n      population: '4500000000',\n      residents: [\n        'https://swapi-trybe.herokuapp.com/api/people/3/',\n        'https://swapi-trybe.herokuapp.com/api/people/21/',\n        'https://swapi-trybe.herokuapp.com/api/people/35/',\n        'https://swapi-trybe.herokuapp.com/api/people/36/',\n        'https://swapi-trybe.herokuapp.com/api/people/37/',\n        'https://swapi-trybe.herokuapp.com/api/people/38/',\n        'https://swapi-trybe.herokuapp.com/api/people/39/',\n        'https://swapi-trybe.herokuapp.com/api/people/42/',\n        'https://swapi-trybe.herokuapp.com/api/people/60/',\n        'https://swapi-trybe.herokuapp.com/api/people/61/',\n        'https://swapi-trybe.herokuapp.com/api/people/66/',\n      ],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/3/',\n        'https://swapi-trybe.herokuapp.com/api/films/4/',\n        'https://swapi-trybe.herokuapp.com/api/films/5/',\n        'https://swapi-trybe.herokuapp.com/api/films/6/',\n      ],\n      created: '2014-12-10T11:52:31.066000Z',\n      edited: '2014-12-20T20:58:18.430000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/8/',\n    },\n    {\n      name: 'Coruscant',\n      rotation_period: '24',\n      orbital_period: '368',\n      diameter: '12240',\n      climate: 'temperate',\n      gravity: '1 standard',\n      terrain: 'cityscape, mountains',\n      surface_water: 'unknown',\n      population: '1000000000000',\n      residents: [\n        'https://swapi-trybe.herokuapp.com/api/people/34/',\n        'https://swapi-trybe.herokuapp.com/api/people/55/',\n        'https://swapi-trybe.herokuapp.com/api/people/74/',\n      ],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/3/',\n        'https://swapi-trybe.herokuapp.com/api/films/4/',\n        'https://swapi-trybe.herokuapp.com/api/films/5/',\n        'https://swapi-trybe.herokuapp.com/api/films/6/',\n      ],\n      created: '2014-12-10T11:54:13.921000Z',\n      edited: '2014-12-20T20:58:18.432000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/9/',\n    },\n    {\n      name: 'Kamino',\n      rotation_period: '27',\n      orbital_period: '463',\n      diameter: '19720',\n      climate: 'temperate',\n      gravity: '1 standard',\n      terrain: 'ocean',\n      surface_water: '100',\n      population: '1000000000',\n      residents: [\n        'https://swapi-trybe.herokuapp.com/api/people/22/',\n        'https://swapi-trybe.herokuapp.com/api/people/72/',\n        'https://swapi-trybe.herokuapp.com/api/people/73/',\n      ],\n      films: [\n        'https://swapi-trybe.herokuapp.com/api/films/5/',\n      ],\n      created: '2014-12-10T12:45:06.577000Z',\n      edited: '2014-12-20T20:58:18.434000Z',\n      url: 'https://swapi-trybe.herokuapp.com/api/planets/10/',\n    },\n  ],\n};\n\nmodule.exports = response;\n","import React from 'react';\nimport styles from '../styles/Header.module.css';\n\nfunction Header() {\n  return (\n    <header className={ styles.header__container }>\n      <div className={ styles.header__title }>\n        <strong>\n          STAR WARS\n        </strong>\n        <em>\n          PLANETS\n        </em>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Context = createContext();\n\nconst { Provider } = Context;\n\nconst initialOptions = [\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nconst initialNumericValue = {\n  column: '',\n  comparison: 'maior que',\n  value: '0',\n};\n\nconst initialOrderValue = {\n  column: 'population',\n  sort: 'asc',\n};\n\nfunction StarwarsProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [filterByName, setFilterByName] = useState('');\n  const [filterByNumericValue, setFilterByNumericValue] = useState(initialNumericValue);\n  const [filterNumeric, setFilterNumeric] = useState([]);\n  const [filterNumericResult, setFilterNumericResult] = useState([]);\n  const [filterResult, setFilterResult] = useState([]);\n  const [filterOptions, setFilterOptions] = useState([]);\n  const [options, setOptions] = useState(initialOptions);\n  const [filterOrder, setFilterOrder] = useState(initialOrderValue);\n  const [columnTitles, setColumnTitles] = useState([]);\n\n  const contextValue = {\n    data,\n    setData,\n    filterResult,\n    setFilterResult,\n    filterByName,\n    setFilterByName,\n    filterByNumericValue,\n    setFilterByNumericValue,\n    filterNumeric,\n    setFilterNumeric,\n    filterNumericResult,\n    setFilterNumericResult,\n    filterOptions,\n    setFilterOptions,\n    options,\n    setOptions,\n    filterOrder,\n    setFilterOrder,\n    columnTitles,\n    setColumnTitles,\n  };\n\n  return (\n    <Provider value={ contextValue }>\n      { children }\n    </Provider>\n  );\n}\n\nStarwarsProvider.propTypes = {\n  children: PropTypes.node, // https://stackoverflow.com/questions/42122522/reactjs-what-should-the-proptypes-be-for-this-props-children\n}.isRequired;\n\nexport { StarwarsProvider, Context };\n","import React, { useContext, useEffect } from 'react';\nimport { Context } from '../context/StarwarsProvider';\nimport styles from '../styles/FilterPainel.module.css';\n\nfunction FilterByName() {\n  const { data, setFilterByName, filterByName, setFilterResult } = useContext(Context);\n  useEffect(() => {\n    const filterDisable = filterByName.length === 0;\n    const applyFilter = data\n      .filter(({ name }) => name\n        .toLowerCase()\n        .includes(filterByName));\n\n    const result = filterDisable ? data : applyFilter;\n\n    setFilterResult(result);\n  }, [data, filterByName, setFilterResult]);\n\n  return (\n    <div className={ styles.painel__head }>\n      <input\n        type=\"text\"\n        data-testid=\"name-filter\"\n        className={ styles.input__filter }\n        placeholder=\"Filter by name\"\n        onChange={ ({ target }) => setFilterByName(target.value) }\n      />\n    </div>\n  );\n}\n\nexport default FilterByName;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Trash } from 'phosphor-react';\nimport { Context } from '../context/StarwarsProvider';\n\nimport styles from '../styles/FilterPainel.module.css';\n\nfunction NumericFilterCard({ column, comparison, value, id }) {\n  const { filterNumeric, setFilterNumeric } = useContext(Context);\n\n  function removeFilter(removeId) {\n    const newFilter = [...filterNumeric];\n    const indexId = newFilter.findIndex((removeItem) => removeItem.id === removeId);\n    newFilter.splice(indexId, 1);\n    setFilterNumeric(newFilter);\n  }\n\n  return (\n    <li\n      className={ styles.filter__applied }\n      data-testid=\"filter\"\n    >\n      {`Coluna ${column} ${comparison} que ${value}.`}\n      <button\n        type=\"button\"\n        onClick={ () => removeFilter(id) }\n      >\n        <Trash />\n      </button>\n    </li>\n  );\n}\n\nNumericFilterCard.propTypes = {\n  column: PropTypes.string,\n  comparison: PropTypes.string,\n  value: PropTypes.string,\n}.isRequired;\n\nexport default NumericFilterCard;\n","import React, { useContext } from 'react';\nimport { Context } from '../context/StarwarsProvider';\n\nimport NumericFilterCard from './NumericFilterCard';\n\nimport styles from '../styles/FilterPainel.module.css';\n\nfunction AppliedFilters() {\n  const {\n    filterNumeric,\n  } = useContext(Context);\n\n  return (\n    <div>\n      <ul\n        className={ styles.applied_filters_container }\n      >\n        { filterNumeric.map(({ column, comparison, value, id }) => (\n          <NumericFilterCard\n            key={ id }\n            id={ id }\n            column={ column }\n            comparison={ comparison }\n            value={ value }\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default AppliedFilters;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../context/StarwarsProvider';\n\nfunction FilterButton() {\n  const { filterByNumericValue, setFilterNumeric, filterOptions } = useContext(Context);\n\n  function numericFilter() {\n    const { column, comparison, value } = filterByNumericValue;\n\n    const hexadecimal = 16;\n    const id = `id${Math.random().toString(hexadecimal).slice(2)}`; // https://stackoverflow.com/questions/3231459/create-unique-id-with-javascript\n    const newNumericFilter = { id, column, comparison, value };\n\n    setFilterNumeric((prevState) => ([\n      ...prevState,\n      newNumericFilter,\n    ]));\n  }\n\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"button-filter\"\n      onClick={ numericFilter }\n      disabled={ filterOptions.length === 0 }\n    >\n      Filtrar\n    </button>\n  );\n}\n\nFilterButton.propTypes = {\n  testId: PropTypes.string,\n}.isRequired;\n\nexport default FilterButton;\n","function setState(target, callback) {\n  const { name, value } = target;\n  callback((prevState) => ({\n    ...prevState,\n    [name]: value,\n  }));\n}\n\nexport default setState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction InputSelect({ testeId, name, value, onChange, options }) {\n  return (\n    <select\n      data-testid={ testeId }\n      name={ name }\n      value={ value }\n      onChange={ onChange }\n    >\n      { options.map((option) => (\n        <option\n          key={ option }\n          value={ option }\n        >\n          { option }\n        </option>\n      )) }\n    </select>\n  );\n}\n\nInputSelect.propTypes = {\n  testeId: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  options: PropTypes.arrayOf(PropTypes.string),\n}.isRequired;\n\nexport default InputSelect;\n","import React, { useContext, useEffect } from 'react';\nimport { Context } from '../context/StarwarsProvider';\nimport setState from '../helpers/setState';\nimport InputSelect from './InputSelect';\n\nfunction InputSelectColumn() {\n  const {\n    filterNumeric,\n    filterByNumericValue,\n    setFilterByNumericValue,\n    filterOptions,\n    setFilterOptions,\n    options,\n  } = useContext(Context);\n\n  function selectedOption(option) {\n    setFilterByNumericValue((prevState) => ({\n      ...prevState,\n      column: option,\n    }));\n  }\n\n  useEffect(() => {\n    if (filterNumeric.length !== 0) {\n      const alreadyFiltered = filterNumeric.map((({ column }) => column));\n      const removeOptions = options\n        .filter((option) => alreadyFiltered\n          .every((filtered) => filtered !== option));\n      setFilterOptions(removeOptions);\n      selectedOption(removeOptions[0]);\n    } else {\n      setFilterOptions(options);\n      selectedOption(options[0]);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterNumeric]);\n\n  return (\n    <InputSelect\n      testeId=\"column-filter\"\n      name=\"column\"\n      value={ filterByNumericValue.column }\n      onChange={ ({ target }) => setState(\n        target, setFilterByNumericValue,\n      ) }\n      options={ filterOptions }\n    />\n  );\n}\n\nexport default InputSelectColumn;\n","import React, { useContext } from 'react';\nimport { Context } from '../context/StarwarsProvider';\nimport setState from '../helpers/setState';\n\nconst OPTIONS = [\n  'maior que',\n  'menor que',\n  'igual a',\n];\n\nfunction InputSelectComparison() {\n  const { filterByNumericValue, setFilterByNumericValue } = useContext(Context);\n  return (\n    <select\n      data-testid=\"comparison-filter\"\n      name=\"comparison\"\n      value={ filterByNumericValue.comparison }\n      onChange={ ({ target }) => setState(\n        target, setFilterByNumericValue,\n      ) }\n    >\n      { OPTIONS.map((option) => (\n        <option\n          key={ option }\n          value={ option }\n        >\n          { option }\n        </option>\n      )) }\n    </select>\n  );\n}\n\nexport default InputSelectComparison;\n","import React, { useContext } from 'react';\nimport { Context } from '../context/StarwarsProvider';\nimport setState from '../helpers/setState';\n\nfunction InputValueFilter() {\n  const { filterByNumericValue, setFilterByNumericValue } = useContext(Context);\n  return (\n    <input\n      type=\"number\"\n      data-testid=\"value-filter\"\n      name=\"value\"\n      value={ filterByNumericValue.value }\n      onChange={ ({ target }) => setState(target, setFilterByNumericValue) }\n    />\n  );\n}\n\nexport default InputValueFilter;\n","import React from 'react';\n\nimport styles from '../styles/FilterPainel.module.css';\n\nimport FilterButton from './FilterButton';\nimport InputSelectColumn from './InputSelectColumn';\nimport InputSelectComparison from './InputSelectComparison';\nimport InputValueFilter from './InputValueFilter';\n\nfunction FilterColumnInputs() {\n  return (\n    <div className={ styles.numericValues__input }>\n      <InputSelectColumn />\n      <InputSelectComparison />\n      <InputValueFilter />\n      <FilterButton />\n    </div>\n  );\n}\n\nexport default FilterColumnInputs;\n","import React, { useContext, useEffect } from 'react';\nimport { Context } from '../context/StarwarsProvider';\n\nimport styles from '../styles/FilterPainel.module.css';\n\nimport FilterColumnInputs from './FilterColumnInputs';\n\nfunction FilterByNumericValues() {\n  const {\n    filterNumeric,\n    filterResult,\n    setFilterNumericResult,\n  } = useContext(Context);\n\n  function comparisonType(column, comparison, value) {\n    const dataNumber = Number(column);\n    const valueNumber = Number(value);\n    if (!dataNumber) return false;\n    switch (comparison) {\n    case 'maior que':\n      return dataNumber > valueNumber;\n    case 'menor que':\n      return dataNumber <= valueNumber; // tentando entender pq a necessidade do = no menor para passar no teste\n    default:\n      return dataNumber === valueNumber;\n    }\n  }\n\n  useEffect(() => {\n    let filter = [...filterResult];\n    filterNumeric.forEach(({ column, comparison, value }) => {\n      filter = filter\n        .filter((item) => comparisonType(item[column], comparison, value));\n    });\n    setFilterNumericResult(filter);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterNumeric, filterResult]);\n\n  return (\n    <div className={ styles.numericValues__container }>\n      <FilterColumnInputs />\n    </div>\n  );\n}\n\nexport default FilterByNumericValues;\n","import React, { useContext } from 'react';\nimport { Context } from '../context/StarwarsProvider';\nimport setState from '../helpers/setState';\nimport InputSelect from './InputSelect';\n\nfunction InputSelectOrder() {\n  const { options, filterOrder, setFilterOrder } = useContext(Context);\n  return (\n    <InputSelect\n      testeId=\"column-sort\"\n      name=\"column\"\n      value={ filterOrder.column }\n      onChange={ ({ target }) => setState(\n        target, setFilterOrder,\n      ) }\n      options={ options }\n    />\n  );\n}\n\nexport default InputSelectOrder;\n","import React, { useContext } from 'react';\nimport { Context } from '../context/StarwarsProvider';\nimport setState from '../helpers/setState';\nimport styles from '../styles/FilterPainel.module.css';\n\nconst radiosOptions = ['asc', 'desc'];\n\nfunction InputRadioOrder() {\n  const { filterOrder, setFilterOrder } = useContext(Context);\n  return (\n    <div className={ styles.inputRadio__container }>\n      { radiosOptions.map((radio) => (\n        <label htmlFor={ radio } key={ radio }>\n          <input\n            data-testid={ `column-sort-input-${radio}` }\n            type=\"radio\"\n            id={ radio }\n            name=\"sort\"\n            value={ radio }\n            checked={ filterOrder.sort === radio }\n            onChange={ ({ target }) => setState(target, setFilterOrder) }\n          />\n          { radio === 'asc' ? 'Ascendente' : 'Descendente' }\n        </label>\n      )) }\n    </div>\n  );\n}\n\nexport default InputRadioOrder;\n","import React, { useContext } from 'react';\nimport { Context } from '../context/StarwarsProvider';\n\nfunction OrderButton() {\n  const {\n    filterOrder,\n    filterResult,\n    setFilterNumericResult,\n    setFilterResult,\n  } = useContext(Context);\n\n  function sortOrder(columnA, columnB, sort) {\n    const numberA = Number(columnA);\n    const numberB = Number(columnB);\n    const backIndex = -1;\n    const nextIndex = 1;\n    if (!numberA) return nextIndex;\n    if (!numberB) return backIndex;\n    switch (sort) {\n    case 'asc':\n      return numberA - numberB;\n    default:\n      return numberB - numberA;\n    }\n  }\n\n  function orderDisplay() {\n    const newOrderDisplay = [...filterResult];\n    const { column, sort } = filterOrder;\n\n    newOrderDisplay\n      .sort((columnA, columnB) => sortOrder(columnA[column], columnB[column], sort));\n\n    setFilterNumericResult(newOrderDisplay);\n    setFilterResult(newOrderDisplay);\n  }\n\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"column-sort-button\"\n      onClick={ orderDisplay }\n    >\n      Ordenar\n    </button>\n  );\n}\n\nexport default OrderButton;\n","import React from 'react';\nimport InputSelectOrder from './InputSelectOrder';\nimport styles from '../styles/FilterPainel.module.css';\nimport InputRadioOrder from './InputRadioOrder';\nimport OrderButton from './OrderButton';\n\nfunction FilterOrder() {\n  return (\n    <div className={ styles.filterOrder__container }>\n      <InputSelectOrder />\n      <InputRadioOrder />\n      <OrderButton />\n    </div>\n  );\n}\n\nexport default FilterOrder;\n","import React, { useContext } from 'react';\nimport { Context } from '../context/StarwarsProvider';\n\n// Estilos\nimport styles from '../styles/FilterPainel.module.css';\n\nfunction RemoveFilterBtn() {\n  const { setFilterNumeric } = useContext(Context);\n  return (\n    <div className={ styles.removeBtn_container }>\n      <button\n        type=\"button\"\n        data-testid=\"button-remove-filters\"\n        onClick={ () => setFilterNumeric([]) }\n      >\n        Remover todas filtragens\n      </button>\n    </div>\n  );\n}\n\nexport default RemoveFilterBtn;\n","import React from 'react';\n\n// Estilos\nimport styles from '../styles/FilterPainel.module.css';\nimport AppliedFilters from './AppliedFilter';\n\n// Componentes\nimport FilterByNumericValues from './FilterByNumericValues';\nimport FilterOrder from './FilterOrder';\nimport RemoveFilterBtn from './RemoveFilterBtn';\n\nfunction AdvancedFilters() {\n  return (\n    <div>\n      <div className={ styles.advancedFilters__container }>\n        <FilterByNumericValues />\n        <FilterOrder />\n        <RemoveFilterBtn />\n      </div>\n      <AppliedFilters />\n    </div>\n  );\n}\n\nexport default AdvancedFilters;\n","import React from 'react';\nimport styles from '../styles/FilterPainel.module.css';\nimport FilterByName from './FilterByName';\n\nimport AdvancedFilters from './AdvancedFilters';\n\nfunction FilterPainel() {\n  return (\n    <div className={ styles.painel__container }>\n      <FilterByName />\n      <AdvancedFilters />\n    </div>\n  );\n}\n\nexport default FilterPainel;\n","import React, { useContext } from 'react';\nimport { Context } from '../context/StarwarsProvider';\nimport styles from '../styles/Table.module.css';\n\nfunction TableBody() {\n  const { filterResult, filterNumericResult, filterNumeric } = useContext(Context);\n\n  function movies(name, filmeList) {\n    return (\n      <ul>\n        {filmeList.map((film, index) => (\n          <li key={ `${name}-${index}` }>{film}</li>\n        ))}\n      </ul>\n    );\n  }\n  const filterNumericDisable = filterNumeric.length === 0;\n  const displayResult = filterNumericDisable ? filterResult : filterNumericResult;\n\n  return (\n    <tbody>\n      { displayResult.map(({\n        name,\n        rotation_period: rotation,\n        orbital_period: orbital,\n        diameter,\n        climate,\n        gravity,\n        terrain,\n        surface_water: surfaceWater,\n        population,\n        films,\n        created,\n        edited,\n        url,\n      }) => (\n        <tr key={ name }>\n          <td data-testid=\"planet-name\">{ name }</td>\n          <td>{ rotation }</td>\n          <td>{ orbital }</td>\n          <td>{ diameter }</td>\n          <td>{ climate }</td>\n          <td>{ gravity }</td>\n          <td>{ terrain }</td>\n          <td>{ surfaceWater }</td>\n          <td>{ population }</td>\n          <td className={ styles.hyperlink_content }>{ movies(name, films) }</td>\n          <td>{ created }</td>\n          <td>{ edited }</td>\n          <td className={ styles.hyperlink_content }>{ url }</td>\n        </tr>\n      )) }\n    </tbody>\n  );\n}\n\nexport default TableBody;\n","import React, { useContext } from 'react';\nimport { Context } from '../context/StarwarsProvider';\n\nfunction TableHeader() {\n  const { columnTitles } = useContext(Context);\n  return (\n    <thead>\n      <tr>\n        { columnTitles\n          .map((title) => (\n            <th key={ title }>\n              {title}\n            </th>\n          )) }\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHeader;\n","import starWarsPlanets from '../testData';\n\n// const URL = 'https://swapi-trybe.herokuapp.com/api/';\n\n// export const getStarWarsAPI = async (endpoint) => {\n//   const response = await fetch(`${URL}${endpoint}`);\n//   const data = await response.json();\n//   return data;\n// };\n\nconst getStarWarsData = async () => starWarsPlanets;\n\nexport default getStarWarsData;\n","// https://stackoverflow.com/questions/5285995/how-do-you-sort-letters-in-javascript-with-capital-and-lowercase-letters-combin\nfunction alphabeticNameOrder(array) {\n  return array.sort((a, b) => {\n    const backIndex = -1;\n    const nextIndex = 1;\n    if (a.name > b.name) return nextIndex;\n    if (a.name < b.name) return backIndex;\n    return 0;\n  });\n}\n\nexport default alphabeticNameOrder;\n","function capitalize(title) {\n  return title[0].toUpperCase() + title.substring(1);\n}\n\nfunction replaceUnderscore(title) {\n  const hasUnderscore = title.search('_') > 0;\n\n  if (hasUnderscore) {\n    return title.replace('_', ' ');\n  }\n\n  return title;\n}\n\nfunction formatColumnsName(titles) {\n  const residentsRemoved = titles.filter((title) => title !== 'residents');\n  const titleCapitalizated = residentsRemoved.map((title) => capitalize(title));\n  return titleCapitalizated.map((title) => replaceUnderscore(title));\n}\n\nexport default formatColumnsName;\n","import React, { useContext, useEffect } from 'react';\nimport { Context } from '../context/StarwarsProvider';\n\nimport styles from '../styles/Table.module.css';\n\nimport FilterPainel from './FilterPainel';\nimport TableBody from './TableBody';\nimport TableHeader from './TableHeader';\n\nimport getStarWarsAPI from '../services/starwarsAPI';\nimport alphabeticNameOrder from '../helpers/alphabeticNameOrder';\nimport formatColumnsName from '../helpers/formatColumnsName';\n\nfunction Table() {\n  const { setData, setFilterResult, setColumnTitles } = useContext(Context);\n\n  useEffect(() => {\n    const getStarwarsPlanets = async () => {\n      const { results } = await getStarWarsAPI('planets');\n      const orderingResults = alphabeticNameOrder(results);\n      const tableColumnsName = Object.keys(results[0]);\n      const namesFormatted = formatColumnsName(tableColumnsName);\n      setColumnTitles(namesFormatted);\n      setData(orderingResults);\n      setFilterResult(orderingResults);\n    };\n    getStarwarsPlanets();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={ styles.search__container }>\n      <FilterPainel />\n      <div className={ styles.table__container }>\n        <table>\n          <TableHeader />\n          <TableBody />\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport { StarwarsProvider } from './context/StarwarsProvider';\n\nfunction App() {\n  return (\n    <main>\n      <StarwarsProvider>\n        <Header />\n        <Table />\n      </StarwarsProvider>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}